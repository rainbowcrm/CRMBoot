create database CRMSAAS
use CRMSAAS


CREATE TABLE FINITE_VALUE_TYPE (
CODE VARCHAR(10) PRIMARY KEY,
DESCRIPTION VARCHAR(25)
);
  
CREATE TABLE FINITE_VALUES (
CODE VARCHAR(10) PRIMARY KEY,
TYPE_CODE VARCHAR(10),
DESCRIPTION VARCHAR(50),
IS_DEFAULT BOOLEAN DEFAULT FALSE,
FOREIGN KEY (TYPE_CODE) REFERENCES FINITE_VALUE_TYPE(CODE) 
);

CREATE TABLE GENERATED_PKS (
TBL_NAME VARCHAR(40) PRIMARY KEY,
CURRENT_MAX LONG
);


CREATE TABLE COMPANIES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_CODE VARCHAR(10) NOT NULL UNIQUE,
COMPANY_NAME VARCHAR(50) NOT NULL UNIQUE,
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
PHONE    VARCHAR(20),
INDUSTRY_TYPE VARCHAR(10) NOT NULL,
BUSINESS_TYPE VARCHAR(10) NOT NULL,
STATE  VARCHAR(30),
COUNTRY  VARCHAR(30),
ADMIN_NAME VARCHAR(30),
NO_DIVISIONS INT,
NO_USERS INT, 
REGISTRATION_DATE DATETIME,
ACTIVATION_DATE DATETIME,
SERVICE_EXPIRY_DATE DATETIME,
LOGO VARCHAR(50),
IS_ACTIVE BOOLEAN DEFAULT TRUE ,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (INDUSTRY_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (BUSINESS_TYPE) REFERENCES FINITE_VALUES(CODE)
);


CREATE TABLE DIVISIONS (
ID INT PRIMARY KEY AUTO_INCREMENT,
DIVISION_CODE VARCHAR(10) NOT NULL ,
DIVISION_NAME VARCHAR(50) NOT NULL ,
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
EMAIL VARCHAR(50),
PHONE    VARCHAR(20),
COMPANY_ID INT NOT NULL,
AREA  VARCHAR(20),
DIV_TYPE VARCHAR(10),
MANAGER VARCHAR(50), 
NO_EMPLOYEES INT,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIV_TYPE) REFERENCES FINITE_VALUES(CODE)
);


CREATE TABLE USERS (
USER_ID VARCHAR(50) PRIMARY KEY,
COMPANY_ID INT,
PASSWORD VARCHAR(50) NOT NULL,
ROLE_TYPE VARCHAR(10),
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
PHONE VARCHAR(50) NOT NULL UNIQUE ,
EMAIL VARCHAR(50) NOT NULL UNIQUE,
PHOTO VARCHAR(100),
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
DIVISION_ID INT,
IS_ACTIVE BOOLEAN DEFAULT TRUE ,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (ROLE_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE NEXTUP_CONFIG (
COMPANY_ID INT NOT NULL,
PROGRAM VARCHAR(50),
FIELD1_TYPE  VARCHAR(10),
FIELD1_WIDTH  INT,
FIELD1_VAULE  VARCHAR(10),
FIELD2_TYPE  VARCHAR(10),
FIELD2_WIDTH  INT,
FIELD2_VAULE  VARCHAR(10),
FIELD3_TYPE  VARCHAR(10),
FIELD3_WIDTH  INT,
FIELD3_VAULE  VARCHAR(10),
FIELD4_TYPE  VARCHAR(10),
FIELD4_WIDTH  INT,
FIELD4_VAULE  VARCHAR(10),
FOREIGN KEY (FIELD1_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (FIELD2_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (FIELD3_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (FIELD4_TYPE) REFERENCES FINITE_VALUES(CODE)
);


CREATE TABLE NEXTUP_VALUES (
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
PROGRAM VARCHAR(50) ,
SEQ_VALUE INT  NOT NULL
);

CREATE TABLE LOGIN_RECORDS(
TOKEN_ID VARCHAR(50) PRIMARY KEY,
USER_ID VARCHAR(50) ,
SESSION_ID VARCHAR(50),
IS_MOBILE_LOGIN BOOLEAN DEFAULT FALSE,
MOBILE_NOTIFICATION_ID  BLOB,
LOGGED_IN_TIME DATETIME, 
LOGGED_OFF_TIME DATETIME, 
EXPIRED_TIME DATETIME,
EXTRA_PROPERTIES BLOB ,
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

ALTER TABLE LOGIN_RECORDS ADD INDEX INDX_SESSION_ID (SESSION_ID);
ALTER TABLE LOGIN_RECORDS ADD INDEX INDX_USER_ID (USER_ID);

CREATE TABLE FILTERS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
USER_ID VARCHAR(50) NOT NULL,
PAGE VARCHAR(150)  NOT NULL,
NAME VARCHAR(50)  NOT NULL,
IS_PUBLIC BOOLEAN DEFAULT FALSE,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);

CREATE TABLE FILTER_DETAILS(
ID INT PRIMARY KEY AUTO_INCREMENT,
FILTER_ID INT NOT NULL,
FIELD VARCHAR(50),
VALUE VARCHAR(50),
FOREIGN KEY (FILTER_ID) REFERENCES FILTERS(ID)
);

CREATE TABLE ALERTS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
RAISED_DATE DATETIME NOT NULL,
ACTION_DATE DATETIME,
ACKNO_DATE DATETIME ,
ALERT_TYPE VARCHAR(10) NOT NULL,
STATUS VARCHAR(10) NOT NULL,
OWNER  VARCHAR(50),
RAISED_BY VARCHAR(50),
DATA VARCHAR(50) NOT NULL,
URL VARCHAR(100),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (ALERT_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (OWNER) REFERENCES USERS(USER_ID)
);

CREATE TABLE REASON_CODES  (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT ,
REASON VARCHAR(50) NOT NULL,
DESCRIPTION VARCHAR(150),
REASON_TYPE VARCHAR(10) NOT NULL,
FACTOR_TYPE VARCHAR(10) NOT NULL
ORIENTATION VARCHAR(10) NOT NULL,
ACCESSIBLE_BY VARCHAR(10) NOT NULL,
USE_FOR_SWOT BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (REASON_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (FACTOR_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (ACCESSIBLE_BY) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (ORIENTATION) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE BRANDS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
BRAND_CODE VARCHAR(20)  NOT NULL,
BRAND_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);

CREATE TABLE CATEGORIES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
CATEGORY_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
PRIMARY_UOM VARCHAR(10) NOT NULL,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRIMARY_UOM) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE PRODUCTS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
PRODUCT_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
CATEGORY_ID INT NOT NULL,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID)
);

CREATE TABLE PRODUCT_FAQ (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
QUESTION BLOB NOT NULL,
ANSWER BLOB NOT NULL,
AUTHOR VARCHAR(50) NOT NULL,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (AUTHOR) REFERENCES USERS(USER_ID)
);

CREATE TABLE PRODUCT_PRICE_RANGES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
ITEMCLASS VARCHAR(10) NOT NULL,
MIN_PRICE FLOAT,
MAX_PRICE FLOAT,
COMMENTS VARCHAR(300),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (ITEMCLASS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

CREATE TABLE PRODUCT_ATTRIBUTES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
ATTRIBUTE VARCHAR(100) NOT NULL ,
ATTRVAL_DATA_TYPE VARCHAR(10) NOT NULL ,
COMMENTS VARCHAR(300),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (ATTRVAL_DATA_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

CREATE TABLE UOMS  (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT ,
UOM_CODE VARCHAR(20)  NOT NULL,
DESCRIPTION VARCHAR(100),
PRIMARY_UOM VARCHAR(10) NOT NULL,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRIMARY_UOM) REFERENCES FINITE_VALUES(CODE)
);


CREATE TABLE ITEMS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
ITEM_CODE VARCHAR(50)  NOT NULL,
ITEM_NAME VARCHAR(150)  NOT NULL,
DESCRIPTION VARCHAR(100),
PRODUCT_ID INT NOT NULL,
BRAND_ID INT NOT NULL,
MANUFACTURER VARCHAR(50),
ITEM_CLASS  VARCHAR(10),
UOM_ID INT NOT NULL,
PURCHASE_PRICE FLOAT,
MAX_PRICE FLOAT,
RETAIL_PRICE  FLOAT,
WHOLESALE_PRICE FLOAT,
BREAK_EVEN_PRICE FLOAT,
PROMOTION_PRICE FLOAT,
MAX_DISCOUNT FLOAT,
ON_PROMOTION BOOLEAN DEFAULT FALSE,
SPECIFICATION VARCHAR(250),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID),
FOREIGN KEY (UOM_ID) REFERENCES UOMS(ID)
);


CREATE TABLE SKUS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
SKU_CODE VARCHAR(50)  NOT NULL,
BARCODE VARCHAR(50)  NOT NULL,
SKU_NAME VARCHAR(150)  NOT NULL,
DESCRIPTION VARCHAR(100),
ITEM_ID INT NOT NULL,,
PRODUCT_ID INT NOT NULL,
COLOR VARCHAR(50),
SIZE VARCHAR(50),
MANUFACTURER VARCHAR(50),
ITEM_CLASS  VARCHAR(10),
UOM_ID INT NOT NULL,
PURCHASE_PRICE FLOAT,
MAX_PRICE FLOAT,
RETAIL_PRICE  FLOAT,
WHOLESALE_PRICE FLOAT,
BREAK_EVEN_PRICE FLOAT,
PROMOTION_PRICE FLOAT,
MAX_DISCOUNT FLOAT,
ON_PROMOTION BOOLEAN DEFAULT FALSE,
SPECIFICATION VARCHAR(250),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ID),
FOREIGN KEY (UOM_ID) REFERENCES UOMS(ID)
);

CREATE TABLE ITEM_ATTRIBUTES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
ITEM_ID INT NOT NULL,
ATTRIBUTE_ID INT NOT NULL,
VALUE VARCHAR(100) NOT NULL ,
COMMENTS VARCHAR(300),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ID),
FOREIGN KEY (ATTRIBUTE_ID) REFERENCES PRODUCT_ATTRIBUTES(ID)
);


CREATE TABLE VENDORS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
VENDOR_CODE VARCHAR(50)  NOT NULL,
VENDOR_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
PHONE VARCHAR(50) NOT NULL  ,
EMAIL VARCHAR(50) NOT NULL ,
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
CREDIT_LIMIT FLOAT,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);


CREATE TABLE CUSTOMERS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
FIRST_NAME VARCHAR(50)  NOT NULL,
LAST_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
PHONE VARCHAR(50) NOT NULL  ,
EMAIL VARCHAR(50) NOT NULL ,
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
CREDIT_LIMIT FLOAT,
LANDMARK VARCHAR(100),
ALTERNATEPHONE VARCHAR(50),
PHOTO  VARCHAR(50),
LOYALTY_POINT FLOAT,
IS_REFERENCIBLE BOOLEAN DEFAULT FALSE,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);



CREATE TABLE ADDRESSES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
CUSTOMER_ID INT,
ADDRESS_TYPE VARCHAR(10) NOT NULL,
RECIPIENT VARCHAR(50) NOT NULL,
ADDRESS1 VARCHAR(50) NOT NULL,
ADDRESS2 VARCHAR(50) NOT NULL,
ZIPCODE VARCHAR(40) NOT NULL,
CITY VARCHAR(40) NOT NULL,
STATE VARCHAR(40) NOT NULL,
COUNTRY VARCHAR(40),
PHONE VARCHAR(40),
EMAIL VARCHAR(40),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (ADDRESS_TYPE) REFERENCES FINITE_VALUES(CODE),
);


CREATE TABLE SKU_IMAGES (
ID INT PRIMARY KEY AUTO_INCREMENT,
SKU_ID INT NOT NULL,
SUFFIX CHAR ,
IMAGE_FILE VARCHAR(50)  NOT NULL,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID)
);

CREATE TABLE INVENTORY (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
SKU_ID INT NOT NULL,
OPENING_QTY INT NOT NULL,
CURRENT_QTY INT ,
RESERVED_QTY INT  DEFAULT 0,
DAMAGED_QTY INT  DEFAULT 0,	
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);


CREATE TABLE METADATA (
ENTITY VARCHAR(50) PRIMARY KEY,
CLASS_NAME VARCHAR(200),
METADATA_TYPE  VARCHAR(10),
IS_DIVISION_SPEC BOOLEAN DEFAULT FALSE,
HQL_CLASS VARCHAR(50), 
DESCRIPTION VARCHAR(50), 
DATE_FIELD VARCHAR(50), 
FOREIGN KEY (METADATA_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE ENTITY_FIELDS (
ENTITY VARCHAR(50) NOT NULL,
KEY_FIELD VARCHAR(50) NOT NULL,
HQL_KEY_FIELD VARCHAR(50),
DESCRIPTION VARCHAR(50), 
DATA_TYPE VARCHAR(10) NOT NULL,
FV_TYPE VARCHAR(10), 
JOIN_HQL_CLAUSE VARCHAR(150),
JOIN_HQL_CONDITION VARCHAR(150),
FOREIGN KEY (ENTITY) REFERENCES METADATA(ENTITY),
FOREIGN KEY (DATA_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (FV_TYPE) REFERENCES FINITE_VALUE_TYPE(CODE)
);

CREATE TABLE ENTITY_RELATIONS (
PRIMARY_ENTITY VARCHAR(50) NOT NULL,
SECONDARY_ENTITY VARCHAR(50) NOT NULL,
CARDINALITY VARCHAR(10) NOT NULL,
HQL_JOIN_CONDITION VARCHAR(150), 
DESCRIPTION VARCHAR(50), 
FOREIGN KEY (PRIMARY_ENTITY) REFERENCES METADATA(ENTITY),
FOREIGN KEY (SECONDARY_ENTITY) REFERENCES METADATA(ENTITY),
FOREIGN KEY (CARDINALITY) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE QUERIES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT ,
OWNER VARCHAR(50),
NAME VARCHAR(50) NOT NULL,
ENTITY VARCHAR(50) NOT NULL,
FROM_DATE DATETIME,
TO_DATE DATETIME,
FROM_CRITERIA VARCHAR(10),
TO_CRITERIA VARCHAR(10),
DATE_VALUE_TYPE VARCHAR(5),
RESULT_TYPE VARCHAR(30),
SELECTED_FIELDS BLOB, 
SORT_FIELD VARCHAR(50),
SORT_DESC VARCHAR(10),
DATE_EXCLUDED BOOLEAN,
GROUP_BY VARCHAR(50),
AGGREGATION_FIELD VARCHAR(50),
AGGREGATION_TYPE VARCHAR(30),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (OWNER) REFERENCES USERS(USER_ID),
FOREIGN KEY (FROM_CRITERIA) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (TO_CRITERIA) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE QUERY_CONDITION (
ID INT PRIMARY KEY AUTO_INCREMENT,
LINE_NUMBER INT ,
COMPANY_ID INT NOT NULL,
QUERY_ID INT NOT NULL,
NO_OPEN_BRACKETS INT,
NO_CLOSE_BRACKETS INT,
POST_CONDITION VARCHAR(10),
DATA_TYPE VARCHAR(10),
IS_DELETED BOOLEAN DEFAULT FALSE,
FIELD VARCHAR(50),
OPERATOR VARCHAR(10),
VALUE  VARCHAR(50),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (QUERY_ID) REFERENCES QUERIES(ID),
FOREIGN KEY (DATA_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE PURCHASES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
BILL_NUMBER VARCHAR(50),
DOC_NUMBER VARCHAR(50),
VENDOR_ID  INT NOT NULL,
PURCHASE_DATE DATETIME,
HD_DISC_AMOUNT FLOAT,
HD_DISC_PERCENT FLOAT,
TOTAL_DISCOUNT FLOAT,
TAX_PERCENT FLOAT,
TAX_AMOUNT FLOAT,
NET_AMOUNT FLOAT,
IS_REALISED BOOLEAN DEFAULT FALSE,
CREDIT_PURCHASE BOOLEAN DEFAULT FALSE,
IS_SETTLED BOOLEAN DEFAULT TRUE,
IS_CANCELLED BOOLEAN DEFAULT FALSE,
IS_RETURNED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (VENDOR_ID) REFERENCES VENDORS(ID)
);

CREATE TABLE PURCHASE_LINES (
ID INT PRIMARY KEY ,
PURCHASE_ID INT NOT NULL,
COMPANY_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
UNIT_PRICE FLOAT,
QTY INT NOT NULL,
COMMENTS VARCHAR(200),
UNIT_DISCOUNT FLOAT  ,
DISC_PERCENT FLOAT  ,
LINE_TOTDISC FLOAT  ,
TAX_PERCENT FLOAT,
TAX_AMOUNT FLOAT,
LINE_TOTAL FLOAT,
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (PURCHASE_ID) REFERENCES PURCHASES(ID)
);



CREATE TABLE SALESASSOCIATE_PORTFLIOS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
USER_ID VARCHAR(50) NOT NULL,
START_DATE DATETIME,
END_DATE DATETIME,
IS_EXPIRED BOOLEAN DEFAULT FALSE,
IS_VOIDED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE SAPORTFOLIO_LINES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
PORTFOLIO_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
PORTFOLIO_TYPE  VARCHAR(10) NOT NULL,
PORTFOLIO_KEY VARCHAR(10) NOT NULL,
IS_VOIDED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PORTFOLIO_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE EXPENSE_HEADS(
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CODE VARCHAR(20) NOT NULL,
NAME VARCHAR(20) NOT NULL,
DESCRIPTION VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);

CREATE TABLE EXPENSE_VOUCHERS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50) NOT NULL,
USER_ID VARCHAR(50) NOT NULL,
EXPENSE_DATE  DATETIME NOT NULL,
SA_COMMENTS VARCHAR(250) ,
STATUS VARCHAR(10) NOT NULL,
REQ_TOTAL FLOAT ,
CORRECTED_TOTAL FLOAT ,
APPROVED_TOTAL FLOAT ,
MGR_ID VARCHAR(50),
MGR_COMMENTS VARCHAR(250) ,
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
FOREIGN KEY (MGR_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE EXPENSEVOUCHER_DETAILS (
ID INT PRIMARY KEY ,
LINE_NUMBER INT NOT NULL,
COMPANY_ID INT NOT NULL,
EXPENSE_VOUCHER_ID INT  NOT NULL,
EXPENSE_HEAD_ID INT NOT NULL,
BILL_NUMBER VARCHAR(50),
EXPENSE_LOCATION  VARCHAR(50),
REQ_AMOUNT FLOAT ,
CORRECTED_AMOUNT FLOAT ,
APPROVED_AMOUNT FLOAT ,
SA_COMMENTS VARCHAR(200),
MGR_COMMENTS VARCHAR(200),
ATTACHMENT_FILE1 VARCHAR(200),
ATTACHMENT_FILE2 VARCHAR(200),
FILE_PATH VARCHAR(100),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (EXPENSE_VOUCHER_ID) REFERENCES EXPENSE_VOUCHERS(ID),
FOREIGN KEY (EXPENSE_HEAD_ID) REFERENCES EXPENSE_HEADS(ID)
);

CREATE TABLE TERRITORIES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
TERRITORY VARCHAR(50) NOT NULL,
DESCRIPTION VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE TERRITORY_LINES(
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
TERRITORY_ID INT NOT NULL,
ZIPCODE VARCHAR(50) NOT NULL,
KEY_LOCATIONS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID)
);

CREATE TABLE CORP_SALES_PERIODS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
DESCRIPTION VARCHAR(200),
FROM_DATE DATETIME,
TO_DATE DATETIME,
ADDITIONAL_TARGET FLOAT, 
TOTAL_TARGET FLOAT, 
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
IS_START_ALERTED BOOLEAN DEFAULT FALSE,
IS_END_ALERTED BOOLEAN DEFAULT FALSE,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);

CREATE TABLE CORP_SALESPERIOD_DIVISIONS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CORP_SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
DIVISION_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CORP_SALES_PERIOD_ID) REFERENCES CORP_SALES_PERIODS(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE CORP_SALESPERIOD_LINES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CORP_SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
TARGET_QTY INT NOT NULL,
TARGET_PRICE FLOAT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (CORP_SALES_PERIOD_ID) REFERENCES CORP_SALES_PERIODS(ID)
);

CREATE TABLE CORP_SALESPERIOD_BRANDS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CORP_SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
BRAND_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID),
FOREIGN KEY (CORP_SALES_PERIOD_ID) REFERENCES CORP_SALES_PERIODS(ID)
);

CREATE TABLE CORP_SALESPERIOD_CATEGORIES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CORP_SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
CATEGORY_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID),
FOREIGN KEY (CORP_SALES_PERIOD_ID) REFERENCES CORP_SALES_PERIODS(ID)
);

CREATE TABLE CORP_SALESPERIOD_PRODUCTS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
CORP_SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
PRODUCT_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (CORP_SALES_PERIOD_ID) REFERENCES CORP_SALES_PERIODS(ID)
);

CREATE TABLE SALES_PERIODS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
DESCRIPTION VARCHAR(200),
DIVISION_ID INT ,
FROM_DATE DATETIME,
TO_DATE DATETIME,
ADDITIONAL_TARGET FLOAT, 
TOTAL_TARGET FLOAT, 
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
IS_START_ALERTED BOOLEAN DEFAULT FALSE,
IS_END_ALERTED BOOLEAN DEFAULT FALSE,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE SALESPERIOD_LINES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
TARGET_QTY INT NOT NULL,
TARGET_PRICE FLOAT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);
 
CREATE TABLE SALESPERIOD_ASSOCIATES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
USER_ID VARCHAR(50) NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);

CREATE TABLE SALESPERIOD_TERRITORIES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
TERRITORY_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);

CREATE TABLE SALESPERIOD_BRANDS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
BRAND_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);

CREATE TABLE SALESPERIOD_CATEGORIES (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
CATEGORY_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);

CREATE TABLE SALESPERIOD_PRODUCTS (
ID INT PRIMARY KEY ,
COMPANY_ID INT NOT NULL,
SALES_PERIOD_ID INT NOT NULL,
PERIOD VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
PRODUCT_ID INT NOT NULL,
LINE_TOTAL FLOAT NOT NULL,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (SALES_PERIOD_ID) REFERENCES SALES_PERIODS(ID)
);

CREATE TABLE PROMOTIONS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT ,
NAME VARCHAR(50) NOT NULL,
PROMO_TYPE VARCHAR(10) NOT NULL,
FOR_ALL  BOOLEAN DEFAULT FALSE,
REQ_AMT FLOAT,
PROMOTED_DISC_PERCENT FLOAT,
CUST_CATEGORY INT,
START_DT  DATETIME,
END_DT DATETIME,
IS_ACTIVE BOOLEAN DEFAULT FALSE,
ITEM_CLASS VARCHAR(10),
BUNDLE_PRICING VARCHAR(10),
BUNDLE_PRICE FLOAT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (CUST_CATEGORY) REFERENCES CUSTOMER_CATEGORIES(ID),
FOREIGN KEY (PROMO_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (ITEM_CLASS) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE PROMOTION_LINES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
PROMOTION_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
MASTER_POSTFOLIO_TYPE  VARCHAR(10) ,
MASTER_PORTFOLIO_KEY VARCHAR(10) ,
CHILD_POSTFOLIO_TYPE  VARCHAR(10) ,
CHILD_PORTFOLIO_KEY VARCHAR(10) ,
REQ_QTY FLOAT ,
PROMOTED_QTY FLOAT,
REQ_AMT FLOAT ,
PROMOTED_DISC_PERCENT FLOAT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (PROMOTION_ID) REFERENCES PROMOTIONS(ID),
FOREIGN KEY (MASTER_POSTFOLIO_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (CHILD_POSTFOLIO_TYPE) REFERENCES FINITE_VALUES(CODE)
);

 
CREATE TABLE SALES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
BILL_NUMBER VARCHAR(50),
ORDER_TYPE VARCHAR(10),
CUSTOMER_ID  INT,
DELIVERY_ADDRESS_ID INT,
TERRITORY_ID INT ,
SALES_DATE DATETIME,
SALES_REF VARCHAR(50),
SALES_MAN VARCHAR(50),
HD_DISC_AMOUNT FLOAT,
HD_DISC_PERCENT FLOAT,
LOYALTY_REDEMMED FLOAT,
LOYALTY_DISCOUNT FLOAT,
TOTAL_DISCOUNT FLOAT,
TAX_PERCENT FLOAT,
TAX_AMOUNT FLOAT,
NET_AMOUNT FLOAT,
CREDIT_SALE BOOLEAN DEFAULT FALSE,
IS_SETTLED BOOLEAN DEFAULT TRUE,
IS_VOIDED BOOLEAN DEFAULT FALSE,
IS_RETURNED BOOLEAN DEFAULT FALSE,
IS_FUTUREDELIVERY BOOLEAN DEFAULT FALSE,
IS_RETURN BOOLEAN DEFAULT FALSE,
ORIGINAL_SALES_ID INT,
ORIGINAL_BILL_NUMBER VARCHAR(50),
DELIVERY_MODE VARCHAR(10),
DELIVERY_AGENT VARCHAR(100),
DELIVERY_DATE  DATETIME,
PAYMENT_DUE_DATE DATETIME,
ASK_FOR_FEEDBACK BOOLEAN DEFAULT TRUE ,
FEEDBACK_ALERTED BOOLEAN DEFAULT FALSE,
FEEDBACK_CAPTURED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (DELIVERY_MODE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (DELIVERY_ADDRESS_ID) REFERENCES ADDRESSES(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID)
);

CREATE TABLE SALES_LINES (
ID INT PRIMARY KEY ,
SALES_ID INT NOT NULL,
COMPANY_ID INT NOT NULL,
BILL_NUMBER VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
USER_ID VARCHAR(50),
UNIT_PRICE FLOAT,
QTY INT NOT NULL,
RETURN_PRICE FLOAT,
ORIGINAL_QTY INT,
ORIGINAL_PRICE FLOAT,
COMMENTS VARCHAR(200),
UNIT_DISCOUNT FLOAT  ,
DISC_PERCENT FLOAT  ,
LINE_TOTDISC FLOAT  ,
TAX_PERCENT FLOAT,
TAX_AMOUNT FLOAT,
LINE_TOTAL FLOAT,
PROMOTION_ID INT,
IS_MASTER_LINE  BOOLEAN DEFAULT FALSE,
IS_CHILD_LINE  BOOLEAN DEFAULT FALSE,
MASTER_LINE_ID INT,
IS_VOIDED BOOLEAN DEFAULT FALSE,
IS_RETURN_LINE BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID),
FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
FOREIGN KEY (PROMOTION_ID) REFERENCES PROMOTIONS(PROMOTION_ID)
);

CREATE TABLE SALES_LEADS (
ID INT PRIMARY KEY,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50),
REF_NUMBER VARCHAR(50),
REF_DATE DATETIME,
REFERRAL_ID INT,
RELEASED_DATE DATETIME,
FINAL_DATE DATETIME,
TERRITORY_ID INT ,
STATUS VARCHAR(10),
SALES_ASSOCIATE VARCHAR(50),
SALES_WON BOOLEAN DEFAULT FALSE,
SALES_ID INT,
SALESASS_REASON_ID INT,
MGR_REASON_ID  INT,
IS_VOIDED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
IS_ALERTED BOOLEAN DEFAULT FALSE,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (REFERRAL_ID) REFERENCES CONTACTS(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID),
FOREIGN KEY (MGR_REASON_ID) REFERENCES REASON_CODES(ID),
FOREIGN KEY (STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SALESASS_REASON_ID) REFERENCES REASON_CODES(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID)
);

CREATE TABLE SALESLEAD_LINES (
ID INT PRIMARY KEY,
SALESLEAD_ID INT NOT NULL,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
QTY INT NOT NULL,
PRICE FLOAT ,
NEGOTITED_PRICE FLOAT ,
SALES_WON BOOLEAN DEFAULT FALSE,
SALES_ID INT,
IS_VOIDED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (SALESLEAD_ID) REFERENCES SALES_LEADS(ID)
);



CREATE TABLE WISHLISTS (
ID INT PRIMARY KEY,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50),
REQUESTED_DATE DATETIME,
SALES_LEAD_GEN BOOLEAN DEFAULT FALSE,
SALES_LEAD_ID INT,
ASSOCIATE VARCHAR(50),
IS_VOIDED BOOLEAN DEFAULT FALSE,
IS_FULFILLED BOOLEAN DEFAULT FALSE,
IS_EXPIRED BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (ASSOCIATE) REFERENCES USERS(USER_ID)
);

CREATE TABLE WISHLIST_LINES  (
ID INT PRIMARY KEY,
WISHLIST_ID INT NOT NULL,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50),
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
DESIRED_QTY INT NOT NULL,
DESIRED_PRICE FLOAT ,
DESIRED_DATE DATETIME ,
SALES_LEAD_GEN BOOLEAN DEFAULT FALSE,
SALES_LEAD_ID INT,
IS_FULFILLED BOOLEAN DEFAULT FALSE,
IS_VOIDED BOOLEAN DEFAULT FALSE,
IS_EXPIRED BOOLEAN DEFAULT FALSE,
REASON_CODE VARCHAR(10),
COMMENTS VARCHAR(200),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (REASON_CODE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (WISHLIST_ID) REFERENCES WISHLISTS(ID)
);


CREATE TABLE CONTACTS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
FIRST_NAME VARCHAR(50)  NOT NULL,
LAST_NAME VARCHAR(50)  NOT NULL,
DESCRIPTION VARCHAR(100),
PHONE VARCHAR(50) NOT NULL  ,
EMAIL VARCHAR(50) NOT NULL ,
CONTACT_TYPE VARCHAR(10),
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
ZIPCODE VARCHAR(50),
CITY VARCHAR(50),
LANDMARK VARCHAR(100),
ALTERNATEPHONE VARCHAR(50), 
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CONTACT_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE FOLLOWUPS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
SALESLEAD_ID INT NOT NULL,
FOLLOWUP_DATE DATETIME NOT NULL,
CONVERSATION BLOB,
CONFIDENCE_LEVEL VARCHAR(10),
COMMUNICATION_MODE VARCHAR(10),
STATUS VARCHAR(10),
OFFERED_PRICE FLOAT,
SALES_ASSOCIATE VARCHAR(50),
NEXT_FOLLOWUP DATETIME,
FINAL_FOLLOWUP BOOLEAN DEFAULT FALSE,
RESULT VARCHAR(10),
RESULT_REASON INT ,
SALESASSOC_COMMENTS BLOB
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
IS_ALERTED BOOLEAN DEFAULT FALSE,
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CONFIDENCE_LEVEL) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SALESLEAD_ID) REFERENCES SALES_LEADS(ID),
FOREIGN KEY (COMMUNICATION_MODE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (RESULT) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (RESULT_REASON) REFERENCES REFERENCES REASON_CODES(ID)
);

CREATE TABLE CUST_CATEGORY_COMPONENTS (
ENTITY VARCHAR(50) NOT NULL  ,
KEY_FIELD VARCHAR(50) NOT NULL ,
HQL_KEY_FIELD VARCHAR(50) NOT NULL  ,
DATA_TYPE VARCHAR(10),
JOIN_HQL_CLAUSE VARCHAR(50), 
IS_AGGREGATED_FIELD BOOLEAN DEFAULT FALSE,
PRECONDITION_FIELD VARCHAR(50) ,
FOREIGN KEY (DATA_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE CUSTOMER_CATEGORIES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT,
NAME VARCHAR(50) NOT NULL,
EVAL_FROM VARCHAR(10) NOT NULL,
EVAL_TO VARCHAR(10) NOT NULL,
INCLUDE_RETURNS BOOLEAN DEFAULT FALSE,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (EVAL_FROM) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (EVAL_TO) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE CUSTOMER_CATEGORY_CONDITION (
ID INT PRIMARY KEY AUTO_INCREMENT,
LINE_NUMBER INT ,
COMPANY_ID INT NOT NULL,
CUSTOMER_CATEGORY_ID INT NOT NULL,
NO_OPEN_BRACKETS INT,
NO_CLOSE_BRACKETS INT,
POST_CONDITION VARCHAR(10),
DATA_TYPE VARCHAR(10),
IS_DELETED BOOLEAN DEFAULT FALSE,
FIELD VARCHAR(50),
OPERATOR VARCHAR(10),
VALUE  VARCHAR(50),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CUSTOMER_CATEGORY_ID) REFERENCES CUSTOMER_CATEGORIES(ID),
FOREIGN KEY (DATA_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE CONFIG_GROUPS (
GROUP_NAME VARCHAR(50) PRIMARY KEY NOT NULL
);

CREATE TABLE BASE_CONFIGURATION (
CODE VARCHAR(20) PRIMARY KEY ,
CONFIG_DESCRIPTION VARCHAR(150) NOT NULL,
CONFIG_GROUP VARCHAR(50) NOT NULL,
VALUE_TYPE VARCHAR(10) NOT NULL,
VALUE_GENERATOR VARCHAR(10),
DEFAULT_VALUE VARCHAR(50),
FOREIGN KEY (CONFIG_GROUP) REFERENCES CONFIG_GROUPS(GROUP_NAME),
FOREIGN KEY (VALUE_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE COMPANY_CONFIGURATION (
ID INT PRIMARY KEY AUTO_INCREMENT,
CONFIG_CODE VARCHAR(20) NOT NULL,
COMPANY_ID INT NOT NULL,
VALUE VARCHAR(50) ,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (CONFIG_CODE) REFERENCES BASE_CONFIGURATION(CODE),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);

CREATE TABLE CARRIERS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
CARRIER_CODE VARCHAR(20) NOT NULL,
CARRIER_NAME VARCHAR(50) NOT NULL,
ADDRESS_1 VARCHAR(50),
ADDRESS_2 VARCHAR(50),
CITY VARCHAR(50),
ZIPCODE VARCHAR(50),
PHONE VARCHAR(50),
EMAIL VARCHAR(50),
WEBSITE VARCHAR(50),
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID)
);



CREATE TABLE DISTRIBUTION_ORDERS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50) NOT NULL,
SALES_ID INT NOT NULL,
ORDER_DATE DATETIME,
PACK_DATE DATETIME,
CUSTOMER_ID  INT,
CARRIER_ID INT,
DELIVERY_ADDRESS_ID INT,
STATUS VARCHAR(10),
COMMENTS VARCHAR(100),
SHIPPING_DATE DATETIME,
SHIPPING_CHARGES FLOAT,
SHIP_REF_NO VARCHAR(50),
PROCESSING_USER VARCHAR(50),
IS_VOIDED BOOLEAN DEFAULT FALSE,
IS_ALERTED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID),
FOREIGN KEY (CARRIER_ID) REFERENCES CARRIERS(ID),
FOREIGN KEY (PROCESSING_USER) REFERENCES USERS(USER_ID),
FOREIGN KEY (DELIVERY_ADDRESS_ID) REFERENCES ADDRESSES(ID),
FOREIGN KEY (STATUS) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE DISTRIBUTION_ORDER_LINES (
ID INT PRIMARY KEY ,
ORDER_ID INT NOT NULL,
COMPANY_ID INT NOT NULL,
DOC_NUMBER VARCHAR(50) NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT NOT NULL,
QTY INT NOT NULL,
PICK_DATE DATETIME,
COMMENTS VARCHAR(200),
IS_VOIDED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (ORDER_ID) REFERENCES DISTRIBUTION_ORDERS(ID)
);


CREATE TABLE ENQUIRIES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT ,
TERRITORY_ID INT,
DOC_NO VARCHAR(50) NOT NULL,
ENQ_DATE DATETIME NOT NULL,
ENQUIRY_TYPE  VARCHAR(10),
ENQUIRY_SOURCE  VARCHAR(10),
ENQUIRY_STATUS  VARCHAR(10) NOT NULL,
CONTACT_ID INT,
CUSTOMER_ID INT,
REASON_ID INT,
FIRST_NAME VARCHAR(50), 
LAST_NAME VARCHAR(50),
PHONE VARCHAR(50),
EMAIL VARCHAR(50),
ADDRESS1 VARCHAR(50),
ADDRESS2 VARCHAR(50),
CITY VARCHAR(50),
ZIPCODE VARCHAR(50),
SALES_ASSOCIATE VARCHAR(50),
ENQUIRY  BLOB,
NEAREST_SKU_ID INT,
NEAREST_ITEM_ID INT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (CONTACT_ID) REFERENCES CONTACTS(ID),
FOREIGN KEY (REASON_ID) REFERENCES REASON_CODES(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID),
FOREIGN KEY (ENQUIRY_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (ENQUIRY_SOURCE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (ENQUIRY_STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SALES_ASSOCIATE) REFERENCES USERS(USER_ID)
);

CREATE TABLE ENQUIRY_LINES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
ENQUIRY_ID INT NOT NULL,
DOC_NO VARCHAR(50) NOT NULL,
SKU_ID INT NOT NULL,
QTY INT NOT NULL,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (ENQUIRY_ID) REFERENCES ENQUIRIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID)
);



CREATE TABLE SALES_PITCHES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
TERRITORY_ID INT,
PITCH_DATE DATETIME NOT NULL,
PITCH_TYPE  VARCHAR(10),
CONTACT_ID INT,
CUSTOMER_ID INT,
PHONE_NUMBER VARCHAR(50),
EMAIL VARCHAR(50),
ADDRESS VARCHAR(250),
SALES_ASSOCIATE VARCHAR(50),
TITLE VARCHAR(50) NOT NULL,
DETAILS  BLOB,
ITEM_ID INT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (CONTACT_ID) REFERENCES CONTACTS(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (TERRITORY_ID) REFERENCES TERRITORIES(ID),
FOREIGN KEY (PITCH_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SALES_ASSOCIATE) REFERENCES USERS(USER_ID)
);


CREATE TABLE DOCUMENTS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DOC_TYPE VARCHAR(10) NOT NULL,
DOC_NAME VARCHAR(50) NOT NULL,
DOC_PATH VARCHAR(200) NOT NULL,
ITEM_ID INT,
CUSTOMER_ID INT ,
SALES_LEAD_ID INT,
SALES_ID INT,
OWNER VARCHAR(50),
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (SALES_LEAD_ID) REFERENCES SALES_LEADS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID),
FOREIGN KEY (OWNER) REFERENCES USERS(USER_ID),
FOREIGN KEY (DOC_TYPE) REFERENCES FINITE_VALUES(CODE)
);

CREATE TABLE CUSTOMER_LOYALTY_POINTS(
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
CUSTOMER_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
SALES_ID INT ,
REDEEMED BOOLEAN DEFAULT FALSE,
POINTS FLOAT NOT NULL,
REDEEMED_AMOUNT FLOAT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID)
);

CREATE TABLE TOPICS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
REF_NO VARCHAR(50) NOT NULL, 
TOPIC_DATE DATETIME,
OWNER VARCHAR(50) NOT NULL,
PORTFOLIO_TYPE  VARCHAR(10) NOT NULL,
PORTFOLIO_KEY VARCHAR(10) NOT NULL,
TITLE VARCHAR(50) NOT NULL,
QUESTION BLOB NOT NULL,
CLOSED BOOLEAN DEFAULT FALSE,
SALE_MADE BOOLEAN ,
SALES_BILL VARCHAR(50),
SALES_ID INT, 
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (OWNER) REFERENCES USERS(USER_ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (PORTFOLIO_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID)
);

CREATE TABLE TOPIC_LINES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
TOPIC_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
REPLY BLOB NOT NULL,
REPLIED_BY VARCHAR(50) NOT NULL,
REPLY_USEFUL BOOLEAN DEFAULT FALSE ,
REPLY_DATE  DATETIME,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (TOPIC_ID) REFERENCES TOPICS(ID),
FOREIGN KEY (REPLIED_BY) REFERENCES USERS(USER_ID)
);

CREATE TABLE FEEDBACKS (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
DOC_NO VARCHAR(50) NOT NULL, 
CUSTOMER_ID INT ,
FDBACK_DATE DATETIME,
CAPTURED_BY VARCHAR(50) NOT NULL,
SALES_ID INT NOT NULL,
COMM_MODE VARCHAR(10) NOT NULL,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (CAPTURED_BY) REFERENCES USERS(USER_ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (COMM_MODE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID)
);


CREATE TABLE FEEDBACK_LINES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
FEEDBACK_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
FEEDBACK_ON VARCHAR(10) NOT NULL,
OBJECT_ID VARCHAR(50) ,
SKU_ID INT,
ASSOCIATE_ID VARCHAR(50),
RATING INT ,
REASON_CODE_ID INT NOT NULL,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (FEEDBACK_ID) REFERENCES FEEDBACKS(ID),
FOREIGN KEY (FEEDBACK_ON) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (ASSOCIATE_ID) REFERENCES USERS(USER_ID),
FOREIGN KEY (REASON_CODE_ID) REFERENCES REASON_CODES(ID)
);

CREATE TABLE SERVICE_REQUEST (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
DIVISION_ID INT NOT NULL,
DOC_NO VARCHAR(50) NOT NULL, 
CUSTOMER_ID INT ,
SERVICE_REQUEST_DATE DATETIME,
SERVICE_COMPLETION_DATE DATETIME,
SERVICE_ASSOCIATE VARCHAR(50) NOT NULL,
SALES_ID INT ,
SERVICE_STATUS  VARCHAR(10) NOT NULL,
SERVICE_TYPE VARCHAR(10) NOT NULL,
VISIT_MODE VARCHAR(10) NOT NULL,
PAID_SERVICE BOOLEAN DEFAULT FALSE,
SERVICE_CHARGE  FLOAT,
SERVICE_TAX  FLOAT,
TOTAL_CHARGE  FLOAT,
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SERVICE_ASSOCIATE) REFERENCES USERS(USER_ID),
FOREIGN KEY (DIVISION_ID) REFERENCES DIVISIONS(ID),
FOREIGN KEY (SERVICE_STATUS) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (SERVICE_TYPE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (VISIT_MODE) REFERENCES FINITE_VALUES(CODE),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID),
FOREIGN KEY (SALES_ID) REFERENCES SALES(ID)
);

CREATE TABLE SERVICE_LINES (
ID INT PRIMARY KEY AUTO_INCREMENT,
COMPANY_ID INT NOT NULL,
SERVICE_ID INT NOT NULL,
LINE_NUMBER INT NOT NULL,
SKU_ID INT,
RECTIFIED BOOLEAN DEFAULT FALSE,
TECHNICIAN_NOTES VARCHAR(200),
CUSTOMER_NOTES VARCHAR(200),
COMMENTS VARCHAR(200),
IS_DELETED BOOLEAN DEFAULT FALSE,
CREATED_DATE DATETIME,
LAST_UPDATED_DATE DATETIME,
CREATED_BY VARCHAR(50),
LAST_UPDATED_BY VARCHAR(50),
VERSION INT DEFAULT 1,
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(ID),
FOREIGN KEY (SKU_ID) REFERENCES SKUS(ID),
FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE_REQUEST(ID)
);